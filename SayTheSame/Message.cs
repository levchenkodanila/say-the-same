using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SayTheSame
{
    public class Message
    {
        public MessageType Type;
        public string Payload;

        public Message(MessageType type, string payload)
        {
            Type = type;
            Payload = payload;
        }
    }

    public enum MessageType
    {
        /// <summary>
        ///     Является подтверждением сервера на запрос игрока.
        ///     Не несёт текстовой части.
        /// </summary>
        ServerAccept,

        /// <summary>
        ///     Является отказом сервера на запрос игрока.
        ///     Не несёт текстовой части.
        /// </summary>
        ServerReject,

        /// <summary>
        ///     Является уведомлением от сервера, что его инвайт был отклонён.
        ///     Содержит никнейм игрока которому был отправлен инвайт.
        /// </summary>
        ServerInviteRemoved,

        /// <summary>
        ///     Является уведомлением игроку, что он стал целью инвайта.
        ///     Отправляется клиенту, после того как инвайт был создан.
        ///     Содержит никнейм запрашивающего игрока.
        ///     Игрок отвечает подтверждением или отказом.
        /// </summary>
        /// <todo>
        ///     Добавить клиенту отмену инвайтов на таймере.
        /// </todo>
        ServerInviteCreated,

        /// <summary>
        ///     Является уведомлением от сервера о том, что игрок добавлен в комнату,
        ///     и он может разыгрывать слово. Отправляется обоим участникам новой
        ///     комнтаы после того как был принят один из инвайтов.
        ///     Содержит никнейм оппонента.
        /// </summary>
        ServerRoomEngagement,

        /// <summary>
        ///     Отправляется сервером для обновления клиентом окна игроков на сервере.
        ///     Содержит список игроков в формате строки, разделённых пробелом и имеющие префикс-статус.
        /// </summary>
        /// <example>
        ///     Пример содержимого: "!Viktor ?Josh ^Kyle !Phil"
        ///     '!' - этот игрок занят.
        ///     '?' - этот игрок свободен.
        ///     '^' - этот игрок - вы.
        /// </example>
        ServerPlayerList,

        /// <summary>
        ///     Уведомление от сервера содержащее обновление глобального чата.
        ///     Отправляется всем игрокам сервера.
        ///     Содержит содержание новой строки чата в формате строки.
        /// </summary>
        /// <example>
        ///     Пример содержимого: "Th3player: Всем привет!"
        /// </example>
        ServerGlobalChat,

        /// <summary>
        ///     Уведомление от сервера содержащее обновление локального чата комнаты.
        ///     Отправляется всем участникам игровой комнаты.
        ///     Содержит содержание новой строки чата в формате строки.
        /// </summary>
        /// <example>
        ///     Пример содержимого: "Som3player: Хмм..."
        /// </example>
        ServerRoomChat,

        /// <summary>
        ///     Является уведомлением сервера о том, что комната в которой находился
        ///     игрок удалена, и что он может создавать инвайты.
        ///     Не имеет текстовой части.
        /// </summary>
        ServerRoomCanceled,

        /// <summary>
        ///     Явяется уведомлением сервера, о том что его оппонент уже ввёл игровое слово.
        ///     Имеет пустую текстовую часть.
        ///     Отправляется только один раз за 'раунд'.
        /// </summary>
        ServerGameReminder,

        /// <summary>
        ///     Уведомление от сервера, о том что 'раунд' окончен.
        ///     Содержит введённые за раунд слова разделённые пробелом.
        /// </summary>
        /// <example>
        ///     Содержимое состоит из символов кириллицы в нижнем регистре и 1 пробел.
        ///     Пример содержимого: "моллюск бутерброд"
        /// </example>
        ServerGameWordsOut,

        /// <summary>
        ///     Уведомление от сервера, о том что игра окончена.
        ///     Несёт пустую текстовую часть.
        ///     Отправляется обоим участникам комнаты, после того как
        ///     последний раунд был окончен и введённые слова совпали.
        ///     После этого разыгранные слова сбрасываются и можно разыгрывать новую партию.
        /// </summary>
        ServerGameFinished,

        /// <summary>
        ///     Является запросом на генерацию нового инвайта.
        ///     Содержит никнейм цели в формате строки.
        ///     Сервер отвечает подтверждением или отказом.
        /// </summary>
        ClientCreateInvite,

        /// <summary>
        ///     Уведомляет о том, что игрок принял инвайт.
        ///     Сервер отвечает подтверждением или отказом.
        ///     Содержит никнейм запрашивающего игрока.
        /// </summary>
        ClientInviteAccept,

        /// <summary>
        ///     Уведомляет о том, что игрок отклонил инвайт.
        ///     Сервер отвечает подтверждением или отказом.
        ///     Содержит никнейм запрашивающего игрока.
        /// </summary>
        ClientInviteReject,

        /// <summary>
        ///     Отправляется игроком в случае если он хочет изменить свой никнейм.
        ///     Содержит новый никнейм в формате строки.
        ///     Сервер отвечает подтверждением, или отказом.
        /// </summary>
        ClientNickname,

        /// <summary>
        ///     Отправляется игроком, когда он хочет написать в глобальный чат.
        ///     Сервер проверяет сообщение и отвечает подтверждением или отказом.
        /// </summary>
        /// <example>
        ///     Пример содержания сообщения от игрока Th3player: "Всем привет!"
        /// </example>
        ClientGlobalChat,

        /// <summary>
        ///     Отправляется игроком, когда он хочет написать в локальный чат комнаты.
        ///     Сервер проверяет сообщение и отвечает подтверждением или отказом.
        /// </summary>
        /// <example>
        ///     Пример содержания сообщения от игрока Som3player: "Хмм..."
        /// </example>
        ClientRoomChat,

        /// <summary>
        ///     Отправляется игроком, когда он хочет покинут комнату.
        ///     Сервер отвечает подтверждением или отказом.
        /// </summary>
        ClientRoomLeave,

        /// <summary>
        ///     Отправляется игроком, когда он хочет разыграть слово.
        ///     Сервер проверяет сообщение и отвечает подтверждением или отказом.
        ///     Для подтверждения содержимое должно быть не короче чем 3 символа,
        ///     состоять из символов кириллицы в нижнем регистре,
        ///     и при этом в строке должны быть и гласные и согласные.
        ///     Уже разыгранные слова явяются не правильными.
        /// </summary>
        /// <example>
        ///     Пример правильного содержимого: "шлем"
        /// </example>
        ClientGameWord,

        /// <summary>
        ///     Является запросом на получение списка игроков.
        ///     Сервер отвечает сообщением несущим cпискок игроков.
        ///     Не имеет нагрузки.
        /// </summary>
        ClientPlayerList,
    }
}
